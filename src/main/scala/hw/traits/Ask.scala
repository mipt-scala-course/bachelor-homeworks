package hw.traits

import cats.Monad
import cats.data.{Reader, ReaderT}
import cats.syntax.applicative.*

/** II. Интерфейс Ask
  *
  * Теперь от вас требуется реализовать несколько интерфейсов Ask для некоторых монад. Интерфейс служит для получения
  * контекстной информации, хранящейся в монаде (подробнее о данной монаде можно прочить на сайте библиотеки cats, а в
  * одном из следующих заданий будут примеры применения)
  */
trait Ask[F[_], R]:
  def ask: F[R]

object Ask:
  def apply[F[_], R](using ask: Ask[F, R]): Ask[F, R] = ask

  /** II.1) Интерфейс Ask для монады Reader
    *
    * Реализуйте описанный выше интерфейс, возвращающий контекст, содержащийся в монаде Reader
    */
  given [R]: Ask[Reader[R, *], R] = ???

  /** II.2) Интерфейс Ask для трансформера ReaderT
    *
    * Реализуйте описанный выше интерфейс, возвращающий контекст, содержащийся в трансформере ReaderT
    */
  given [F[_]: Monad, R]: Ask[ReaderT[F, R, *], R] = ???
